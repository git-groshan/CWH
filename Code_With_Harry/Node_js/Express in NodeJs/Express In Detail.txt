Express.js, commonly referred to as Express, is a minimalist web application framework for Node.js. It provides a robust set of features for building web and mobile applications and APIs. Express is designed to be flexible and unopinionated, allowing developers to create applications in their own preferred way.

Key features of Express.js include:

1. **Middleware:** Express.js is built around the concept of middleware, which are functions that have access to the request object (`req`), the response object (`res`), and the next middleware function in the application's request-response cycle. Middleware functions can perform tasks such as parsing request bodies, handling authentication, logging, error handling, and more.

2. **Routing:** Express provides a simple and intuitive API for defining routes and handling HTTP requests. Routes can be defined for different HTTP methods (GET, POST, PUT, DELETE, etc.) and URL patterns, allowing developers to create RESTful APIs and web applications easily.

3. **Templating Engines:** Although Express itself does not include a built-in templating engine, it supports a variety of templating engines (such as Pug, EJS, Handlebars, etc.) through third-party middleware. This allows developers to render dynamic HTML pages using templates and data from their applications.

4. **Static File Serving:** Express can serve static files (such as HTML, CSS, images, and client-side JavaScript files) using its built-in `express.static` middleware. This makes it easy to serve static assets from a directory on the server.

5. **Middleware-based Architecture:** Express.js applications are built by composing middleware functions together. Developers can create custom middleware functions or use third-party middleware to add functionality to their applications. This modular architecture makes it easy to add or remove features and extend the functionality of an Express application.

6. **Robust Ecosystem:** Express.js has a large and active ecosystem of third-party middleware, plugins, and extensions that extend its functionality. This ecosystem includes libraries for authentication, database integration, session management, security, logging, and more, making it easy to add advanced features to Express applications.

Overall, Express.js is a powerful and flexible web application framework for Node.js that simplifies the process of building web and mobile applications and APIs. Its minimalistic design and middleware-based architecture make it easy to use, highly customizable, and well-suited for a wide range of applications.